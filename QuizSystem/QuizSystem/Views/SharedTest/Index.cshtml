@using Core.Models;
@using Core.Enums
@using QuizSystem.ViewModels.PaginationTestViewModels;
@model SharedTestPaginationModel

@{
    var sharedTests = Model.Tests.ToList();
}


@if (Model.Tests.Count() == 0)
{
    <h1>You don't have any unshared tests.</h1>
}
else
{
    <div style="text-align: center;">
        <form method="get" asp-controller="SharedTest" asp-action="Index" class="mb-4">
            <div class="row">
                <!-- Center the input group and button -->
                <div class="col-md-6">
                    <div class="input-group" style="width: 350px">
                        <div class="form-outline">
                            <input type="hidden" id="page" name="page" value="@Model.CurrentPageIndex" />
                            <input type="search" id="searchParam" name="searchParam" class="form-control" style="background-color: ghostwhite;" />
                            <label class="form-label" for="searchParam">Search by title</label>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-6 d-flex justify-content-end">
                    <!-- Align the dropdown to the right -->
                    <div class="dropdown">
                        <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-mdb-toggle="dropdown" aria-expanded="false">
                            Order By
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.StartDate })" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> Start Date (oldest)</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.StartDateDesc})" class="dropdown-item"><i class="fa fa-arrow-down" aria-hidden="true"></i> Start Date (newest)</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.EndDate })" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> End Date (oldest)</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.EndDateDesc})" class="dropdown-item"><i class="fa fa-arrow-down" aria-hidden="true"></i> End Date (newest)</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.AttemptCount })" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> Attempts count </a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.AttemptCountDesc })" class="dropdown-item"><i class="fa fa-arrow-down" aria-hidden="true"></i> Attempts count</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.AttemptDuration })" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> Attempt duration </a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "SharedTest", new { page = Model.CurrentPageIndex, searchParam = Model.SearchParam, sortOrder = SortingParam.AttemptDurationDesc })" class="dropdown-item"><i class="fa fa-arrow-down" aria-hidden="true"></i> Attempts duration</a>
                            </li>
                            @*<li><a class="dropdown-item" href="#">Attempts</a></li>*@
                        </ul>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <!-- Convert Model to a List for easier manipulation -->
    @for (int i = 0; i < sharedTests.Count; i += 3)
    {
        <div class="row">
            <!-- Create a row for every three elements -->
            @for (int j = i; j < Math.Min(i + 3, sharedTests.Count); j++)
            {
                var sharedTest = sharedTests[j];
                <div class="col-md-4">
                    <!-- Use col-md-4 to divide the row into 3 equal columns on medium-sized screens -->
                    <div class="card mb-3">
                        <div class="card-header"><h5>Title: @sharedTest.TestName</h5></div>
                        <div class="card-body">
                            @*<h5 class="card-title"></h5>*@
                            <p class="card-text">Description: @sharedTest.Description</p>
                            <p class="card-text">Status: @sharedTest.Status.ToString()</p>
                            <p class="card-text">Attempts count: @sharedTest.AttemptCount</p>

                            @{
                                var time = sharedTest.AttemptDuration - new DateTime(2023, 01, 01);
                            }
                            <p class="card-text">Attempt duration: @time</p>

                            <a href="@Url.Action("Details", "SharedTest", new { sharedTestId = sharedTest.SharedTestId})" class="btn btn-primary">Details</a>

                            <!-- Button trigger modal with a unique ID -->
                            <button type="button" class="btn btn-danger" data-mdb-toggle="modal" data-mdb-target="#exampleModal-@sharedTest.SharedTestId">
                                Delete
                            </button>

                            <!-- Modal with a unique ID -->
                            <div class="modal fade" id="exampleModal-@sharedTest.SharedTestId" tabindex="-1" aria-labelledby="exampleModalLabel-@sharedTest.SharedTestId" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel-@sharedTest.SharedTestId">Are you sure you want to delete this test?</h5>
                                            <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">Close</button>
                                            <a href="@Url.Action("Delete", "SharedTest", new { sharedTestId = sharedTest.SharedTestId})" class="btn btn-danger" data-user-id="@sharedTest.SharedTestId">Delete</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
@*                            <a href="@Url.Action("Edit", "Test", new { testId = sharedTest.TestId})" class="btn btn-primary">Edit</a>*@


                            <div class="card-footer bg-light px-3 mt-2">@sharedTest.StartDate.ToString("dddd, dd MMMM yyyy HH:mm") - @sharedTest.EndDate.ToString("dddd, dd MMMM yyyy HH:mm")</div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- Add CSS styles to center the pagination bar -->
        
    }
    <style>
        .pagination-container {
            display: flex;
            justify-content: center;
        }
    </style>

    <div class="pagination-container">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (Model.CurrentPageIndex > 1)
                {
                    <li class="page-item">
                        <a href="@Url.Action("Index", "SharedTest", new { page = (Model.CurrentPageIndex - 1), searchParam = Model.SearchParam, sortOrder =ViewBag.SortParam })" aria-label="Previous" class="page-link">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    if (i == Model.CurrentPageIndex)
                    {
                        <li class="page-item active"> <a href="@Url.Action("Index", "SharedTest", new { page = @i, searchParam = Model.SearchParam , sortOrder =ViewBag.SortParam})" class="page-link">@i</a></li>
                    }
                    else
                    {
                        <li class="page-item"> <a href="@Url.Action("Index", "SharedTest", new { page = @i, searchParam = Model.SearchParam , sortOrder =ViewBag.SortParam})" class="page-link">@i</a></li>

                    }
                }

                @if (Model.CurrentPageIndex < Model.PageCount)
                {
                    <li class="page-item">
                        <a href="@Url.Action("Index", "SharedTest", new { page = (Model.CurrentPageIndex + 1), searchParam = Model.SearchParam, sortOrder =ViewBag.SortParam })" aria-label="Next" class="page-link">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}

