@using QuizSystem.ViewModels.PaginationTestViewModels
@model TestPaginationModel

@{
    var tests = Model.Tests;
}

@if (Model.Tests.Count() == 0)
{
    <h1>You haven't created tests</h1>
}
else
{
        <form method="get"  asp-controller="Test" asp-action="AllTests" class="mb-4">
            <div class="row justify-content-center">
                <!-- Center the input group and button -->
                <div class="col-md-6">
                    <div class="input-group">
                        <div class="form-outline">
                            <input type="hidden" id="page" name="page" value="@Model.CurrentPageIndex" />
                            <input type="search" id="searchParam" name="searchParam" class="form-control" style="background-color: ghostwhite;" />
                            <label class="form-label" for="searchParam">Search</label>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                   
                </div>
            </div>
        </form>

    <!-- Convert Model to a List for easier manipulation -->
    @for (int i = 0; i < tests.Count; i += 3)
    {
        <div class="row">
            <!-- Create a row for every three elements -->
            @for (int j = i; j < Math.Min(i + 3, tests.Count); j++)
            {
                var test = tests[j];
                <div class="col-md-4">
                    <!-- Use col-md-4 to divide the row into 3 equal columns on medium-sized screens -->
                    <div class="card mb-3">
                        <div class="card-header"><h5>Title: @test.Name</h5></div>
                        <div class="card-body">
                            <p class="card-text"><strong>Attempts count: <i class="fas fa-bullseye"></i> @test.UserTakenTestAmount</strong></p>
                            <p class="card-text">Description: @test.Description</p>
                            <a href="@Url.Action("MemberView", "Test", new { testId = test.TestId })" class="btn btn-primary">View the Test</a>
                            <div class="card-footer bg-light px-3 mt-2">@test.DateOfCreation.ToString("dddd, dd MMMM yyyy HH:mm")</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Add CSS styles to center the pagination bar -->
    <style>
        .pagination-container {
            display: flex;
            justify-content: center;
        }
    </style>

    <div class="pagination-container">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (Model.CurrentPageIndex > 1)
                {
                    <li class="page-item">
                        <a href="@Url.Action("AllTests", "Test", new { page = (Model.CurrentPageIndex - 1), searchParam = Model.SearchParam })" aria-label="Previous" class="page-link">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    if (i == Model.CurrentPageIndex)
                    {
                        <li class="page-item active"> <a href="@Url.Action("AllTests", "Test", new { page = @i, searchParam = Model.SearchParam })" class="page-link">@i</a></li>
                    }
                    else
                    {
                        <li class="page-item"> <a href="@Url.Action("AllTests", "Test", new { page = @i, searchParam = Model.SearchParam })" class="page-link">@i</a></li>

                    }
                }

                @if (Model.CurrentPageIndex < Model.PageCount)
                {
                    <li class="page-item">
                        <a href="@Url.Action("AllTests", "Test", new { page = (Model.CurrentPageIndex + 1), searchParam = Model.SearchParam })" aria-label="Next" class="page-link">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}
