@using QuizSystem.ViewModels.TestViewModels
@using Core.Enums
@using BLL.Interfaces;
@model MemberTestViewModel
@inject ITestService testService

@{
    var result = await testService.IsUserTest(Model.TestId, Model.UserId);
    var isCreator = result.IsSuccessful; 
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <style>
        /* Custom CSS to center the card and make it 60% width */
        .centered-card {
            margin: 0 auto;
            width: 60%;
        }
    </style>
</head>
<body>
    @if (TempData["Error"] != null)
    {
        <div class="col-md-12 alert alert-danger">
            <span><b>Sorry!</b> - @TempData["Error"]</span>
        </div>
    }
    <!--Main layout-->
    <main class="my-5">
        <div class="container">
            <!--Section: Content-->
            <section class="text-center text-md-start">
                <div class="row">
                    <div class="col-md-12 centered-card">
                        <!-- Centered card with 60% width -->
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Test name: @Model.Name - @Model.Visibility.ToString()</h5>
                                <p class="card-text">Description: @Model.Description</p>
                                <p class="card-text">Questions amount: @Model.AmountOfQuestions</p>
                                <p class="card-text">Max mark: @Model.TotalMark</p>

                                @if (isCreator){
                                    if(Model.Questions.Count != 0)
                                    {
                                        <a href="@Url.Action("TakeTest", "Attempt", new { testId = Model.TestId})" class="btn btn-primary">Take the test</a>
                                    }
                                    
                                    <a href="@Url.Action("Edit", "Test", new { testId = @Model.TestId })" class="btn btn-primary">Edit</a>
                                    <a href="@Url.Action("Create", "Question", new { testId = @Model.TestId })" class="btn btn-outline-success btn-rounded" data-mdb-ripple-color="dark">Add question</a>
                                }
                                
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Space between test card and question cards -->
                <div class="mb-4"></div>

                <div class="row justify-content-center">
                    @foreach (var question in Model.Questions)
                    {
                        <div class="col-md-12 centered-card">
                            <div class="card">
                                <div class="card-header">
                                    <p>(Type: @question.Type)</p>
                                    <p><strong>Question @question.Description</strong> (Points: @question.Point)</p>
                                </div>
                                <div class="card-body">
                                        @foreach(var answer in question.Answers)
                                        {
                                        
                                            @if(answer.IsRight){
                                                <div class="note note-success mb-3">
                                                    <strong>Right answer:</strong> Answer Text: @answer.Value
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="note note-secondary mb-3">
                                                    <strong>Wrong answer:</strong> Answer Text: @answer.Value
                                                </div>
                                            }
                                        <hr class="hr" />
                                        }  
                                    @if(isCreator){
                                        <button type="button" class="btn btn-danger" data-mdb-toggle="modal" data-mdb-target="#exampleModal-@question.QuestionId">
                                            Delete
                                        </button>

                                        <!-- Modal with a unique ID -->
                                        <div class="modal fade" id="exampleModal-@question.QuestionId" tabindex="-1" aria-labelledby="exampleModalLabel-@question.QuestionId" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="exampleModalLabel-@question.QuestionId">Are you sure you want to delete this question?</h5>
                                                        <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-mdb-dismiss="modal">Close</button>
                                                        <a href="@Url.Action("Delete", "Question", new { questionId = question.QuestionId, testId = question.TestId})" class="btn btn-danger" data-user-id="@question.QuestionId">Delete</a>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <a href="@Url.Action("Edit", "Question", new { questionId =@question.QuestionId})" class="btn btn-primary">Edit</a>
                                    }
                                    <!-- Button trigger modal with a unique ID -->
                                   
                                </div>
                            </div>
                        </div>
                        <div class="mb-3"></div>
                    }
                </div>
            </section>
        </div>
    </main>

    <!--Main layout-->
</body>
</html>
