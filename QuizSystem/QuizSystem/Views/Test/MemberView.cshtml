@using QuizSystem.ViewModels.TestViewModels
@using Core.Enums
@using BLL.Interfaces;
@model MemberTestViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <style>
        /* Custom CSS to center the card and make it 60% width */
        .centered-card {
            margin: 0 auto;
            width: 60%;
        }

        /* Custom CSS to align the button to the right of the center elements */
        .centered-container {
            display: flex;
            justify-content: space-between;
        }
    </style>
</head>
<body>
    @if (TempData["Error"] != null)
    {
        <div class="col-md-12 alert alert-danger">
            <span><b>Sorry!</b> - @TempData["Error"]</span>
        </div>
    }
    <!--Main layout-->
    <main class="my-5">
        <div class="container">
            <!--Section: Content-->
            <section class="text-center text-md-start">
                <div class="row">
                    <div class="col-md-12 centered-card">
                        <!-- Centered card with 60% width -->
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Test name: @Model.Name</h5>
                                <p class="card-text">Description: @Model.Description</p>
                                <p class="card-text">Questions amount: @Model.AmountOfQuestions</p>
                                <p class="card-text">Max mark: @Model.TotalMark</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Space between test card and question cards -->
                <div class="mb-4"></div>

                <div class="row justify-content-center">
                    @foreach (var question in Model.Questions)
                    {
                        <div class="col-md-12 centered-card">
                            <div class="card">
                                <div class="card-header">
                                    <p>(Type: @question.Type)</p>
                                    <p><strong>Question @question.Description</strong> (Points: @question.Point)</p>
                                </div>
                                <div class="card-body">
                                    @foreach (var answer in question.Answers)
                                    {                                     
                                        <div class="note note-secondary mb-3">
                                            <strong>Answer Text: </strong> @answer.Value
                                        </div>
                                        <hr class="hr" />
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="mb-3"></div>
                    }
                    <div class="mb-4"></div>
                    @if(!(Model.Questions.Count == 0))
                    {
                        <div class="col-md-12 centered-card">
                            <div class="centered-container justify-content-end">
                                <a href="@Url.Action("TestDocumentView", "Test", new { testId = Model.TestId})" class="btn btn-secondary">Take document</a>
                                <a href="@Url.Action("TakeTest", "Attempt", new { testId = Model.TestId})" class="btn btn-primary">Take the test</a>
                            </div>
                        </div>
                    }
                   

                </div>
            </section>
        </div>
    </main>
    <!--Main layout-->
</body>
</html>
