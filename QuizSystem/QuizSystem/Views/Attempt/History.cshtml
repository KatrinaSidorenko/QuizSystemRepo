@using QuizSystem.ViewModels.PaginationTestViewModels
@using Core.Enums
@model AttempyHistoryPaginationModel

<style>
    .form-group-date {
        display: flex;
        justify-content: space-between; /* Adjust as needed */
        align-items: center;
    }

    .field {
        flex: 1;
        margin-right: 10px; /* Adjust as needed for spacing between fields */
    }

        /* Optional: Set the width of the datetime-local inputs */
        .field input[type="datetime-local"] {
            width: 100%; /* Adjust as needed */
        }

</style>
<div class="container mb-5"> </div>
<div style="text-align: center;">
    <form method="get" asp-controller="Attempt" asp-action="History" class="mb-4">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group-date d-flex">
                    <label asp-for="StartDate" class="control-label">Start: </label>
                    <div class="field flex-grow-1">
                        @*<label asp-for="StartDate" class="control-label">Start Date</label>*@
                        <input asp-for="StartDate" class="form-control" type="datetime-local">
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                    </div>
                    <label asp-for="EndDate" class="control-label">End: </label>
                    <div class="field flex-grow-1">
                        @*<label asp-for="EndDate" class="control-label">End Date</label>*@
                        <input asp-for="EndDate" class="form-control" type="datetime-local">
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                    </div>
                    <div class="input-group" style="margin-top: 4px;">
                        <input type="hidden" id="page" name="page" value="@Model.CurrentPageIndex" />
                        <input type="hidden" id="userId" name="userId" value="@Model.UserId" />
                        <input type="hidden" id="testId" name="testId" value="@Model.TestId" />
                        <input type="hidden" id="sharedTestId" name="sharedTestId" value="@Model.SharedTestId" />
                        <input type="hidden" id="sortOrder" name="sortOrder" value="@Model.SortingParam" />
                        <input type="hidden" id="startDate" name="startDate" value="@Model.StartDate" />
                        <input type="hidden" id="endDate" name="endDate" value="@Model.EndDate" />

                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>


         @*   <!-- Center the input group and button -->
            <div class="col-md-6">
                <div class="form-group-date">
                    <div class="field">
                        <label asp-for="StartDate" class="control-label"></label>
                        <input asp-for="StartDate" class="form-control" type="datetime-local">
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                    </div>
                    <div class="field">
                        <label asp-for="EndDate" class="control-label"></label>
                        <input asp-for="EndDate" class="form-control" type="datetime-local">
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="input-group" style="width: 350px">
                    <div class="form-outline">
                        <input type="hidden" id="page" name="page" value="@Model.CurrentPageIndex" />
                        <input type="hidden" id="userId" name="userId" value="@Model.UserId" />
                        <input type="hidden" id="testId" name="testId" value="@Model.TestId" />
                        <input type="hidden" id="sharedTestId" name="sharedTestId" value="@Model.SharedTestId" />
                        <input type="hidden" id="sortOrder" name="sortOrder" value="@Model.SortingParam" />
                        <input type="search" id="searchParam" name="searchParam" class="form-control" style="background-color: ghostwhite;" />
                       
                        <label class="form-label" for="searchParam">Search by accuracy</label>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>*@
           

            <div class="col-md-6 d-flex justify-content-end">
                <div class="dropdown">
                    <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-mdb-toggle="dropdown" aria-expanded="false">
                        Filter By Accuracy
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId,  searchParam = Model.SearchParam, sortOrder =Model.SortingParam, filterParam = FilterParam.from0to25})" class="dropdown-item">0-25 %</a>
                        </li>
                        <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId, searchParam = Model.SearchParam, sortOrder =Model.SortingParam, filterParam = FilterParam.from25to50})" class="dropdown-item">25-50 %</a>
                        </li>
                         <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId,  searchParam = Model.SearchParam, sortOrder =Model.SortingParam, filterParam = FilterParam.from50to75})" class="dropdown-item">50-75 %</a>
                        </li>
                         <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId,  searchParam = Model.SearchParam, sortOrder =Model.SortingParam, filterParam = FilterParam.from75to100})" class="dropdown-item">75-100 %</a>
                        </li>
                    </ul>
                </div>
                <div class="dropdown">
                    <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-mdb-toggle="dropdown" aria-expanded="false">
                        Order By
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId,  searchParam = Model.SearchParam, sortOrder = SortingParam.StartDate, filterParam =Model.FilterParam})" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> Start Date (oldest)</a>
                        </li>
                        <li>
                            <a href="@Url.Action("History", "Attempt", new {userId = Model.UserId, testId = Model.TestId,  sharedTestId = Model.SharedTestId, searchParam = Model.SearchParam, sortOrder = SortingParam.StartDateDesc, filterParam = Model.FilterParam})" class="dropdown-item"><i class="fa fa-arrow-down" aria-hidden="true"></i> Start Date (newest)</a>
                        </li>
                        <li>
                            <a href="@Url.Action("History", "Attempt",new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId, searchParam = Model.SearchParam, sortOrder = SortingParam.EndDate , filterParam = Model.FilterParam})" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> End Date (oldest)</a>
                        </li>
                        <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId, searchParam = Model.SearchParam, sortOrder = SortingParam.Points, filterParam = Model.FilterParam })" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> Points</a>
                        </li>
                        <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId, searchParam = Model.SearchParam, sortOrder = SortingParam.PointsDesc , filterParam = Model.FilterParam})" class="dropdown-item"><i class="fa fa-arrow-down" aria-hidden="true"></i> Points (better) </a>
                        </li>
                        <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId, searchParam = Model.SearchParam, sortOrder = SortingParam.RightAnswers, filterParam = Model.FilterParam })" class="dropdown-item"><i class="fa fa-arrow-up" aria-hidden="true"></i> Right answers </a>
                        </li>
                        <li>
                            <a href="@Url.Action("History", "Attempt", new { userId = Model.UserId, testId = Model.TestId, sharedTestId = Model.SharedTestId, searchParam = Model.SearchParam, sortOrder = SortingParam.RightAnswersDesc, filterParam = Model.FilterParam })" class="dropdown-item"><i class="fa fa-arrow-down" aria-hidden="true"></i> Right answers (better) </a>
                        </li>
                        @*<li><a class="dropdown-item" href="#">Attempts</a></li>*@
                    </ul>
                </div>
            </div>
        </div>
    </form>
</div>

@if (Model.Attempts.Count() != 0)
{
    <div class="container mb-5"> </div>
    @for (int i = 0; i < Model.Attempts.Count; i += 3)
    {
        <div class="row">
            <!-- Create a row for every three elements -->
            @for (int j = i; j < Math.Min(i + 3, Model.Attempts.Count); j++)
            {
                    var attempt = Model.Attempts[j];
                <div class="col-md-4">
                    <!-- Use col-md-4 to divide the row into 3 equal columns on medium-sized screens -->
                    <div class="card mb-3">
                        <div class="card-header">Right answers amount: @attempt.RightAnswersAmount</div>
                        <div class="card-body">
                            <h5 class="card-title">Mark: @attempt.Points</h5>
                            <h5 class="card-title">Accuracy: @Math.Round(attempt.Accuracy, 2) %</h5>
                            <p class="card-text">Start date: @attempt.StartDate.ToString("dddd, dd MMMM yyyy HH:mm")</p>
                            <p class="card-text">End date: @attempt.EndDate.ToString("dddd, dd MMMM yyyy HH:mm")</p>
                            <a href="@Url.Action("AttemptResult", "Attempt", new { attemptId = attempt.AttemptId})" class="btn btn-primary">View the Attempt</a>
                            @{
                                var time = attempt.EndDate - attempt.StartDate;
                            }
                            <div class="card-footer bg-light px-3 mt-2">Total time: @time.ToString(@"hh\:mm\:ss")</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    <style>
        .pagination-container {
            display: flex;
            justify-content: center;
        }
    </style>
    <div class="container mb-5">
    </div>
    <div class="pagination-container">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (Model.CurrentPageIndex > 1)
                {
                    <li class="page-item">
                        <a href="@Url.Action("History", "Attempt", new {userId = Model.UserId, testId = Model.TestId,  sharedTestId = Model.SharedTestId,page = (Model.CurrentPageIndex - 1), searchParam = Model.SearchParam, sortOrder = Model.SortingParam, filterParam = Model.FilterParam })" aria-label="Previous" class="page-link">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    if (i == Model.CurrentPageIndex)
                    {
                        <li class="page-item active"> <a href="@Url.Action("History", "Attempt", new {userId = Model.UserId, testId = Model.TestId,  sharedTestId = Model.SharedTestId,page = @i, searchParam = Model.SearchParam , sortOrder = Model.SortingParam, filterParam = Model.FilterParam})" class="page-link">@i</a></li>
                    }
                    else
                    {
                        <li class="page-item"> <a href="@Url.Action("History", "Attempt", new {userId = Model.UserId, testId = Model.TestId,  sharedTestId = Model.SharedTestId,page = @i, searchParam = Model.SearchParam , sortOrder = Model.SortingParam, filterParam = Model.FilterParam})" class="page-link">@i</a></li>

                    }
                }

                @if (Model.CurrentPageIndex < Model.PageCount)
                {
                    <li class="page-item">
                        <a href="@Url.Action("History", "Attempt", new {userId = Model.UserId, testId = Model.TestId, page = (Model.CurrentPageIndex + 1), searchParam = Model.SearchParam, sortOrder = Model.SortingParam, filterParam = Model.FilterParam})" aria-label="Next" class="page-link">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}
else
{
    <h1>No attempts</h1>
}
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Get the current year
        var currentYear = new Date().getFullYear();

        // Set the start year for both datetime-local inputs
        $("input[type='datetime-local']").prop("min", currentYear + "-01-01T00:00");
    });
</script>


   


